def main():
    graph = [0, 1, 0, 2, 1, 3, 2, 3, 2, 4, 3, 4, 3, 5, 4, 5]
    DFS(graph, graph[0])
def DFS(g, s):
    #S = stack data structure initialised with s
    S = [s]
    edges = [[g[x], g[x+1]] for x in range(0, len(g), 2)]
    while(S):
        v = S.pop(len(S)-1)
        for edge in edges:
            if edge[0] == v and 'explored' not in edge:
                edge.append('explored')
                S.append(edge[1])
    
def DFSLoop(g, n):
    vertices = []
    for x in g:
        if [x] not in vertices:
            vertices.append([x])
    current_label = len(vertices)    
    
if __name__ == '__main__':
    main()