def main():
    #run EdgeContraction for n^2 ln n times, saving the minimum cut it returns
    n = []
    edge = []
    with open('kargerMinCut.txt') as data:
        for line in data:
            for i in range(1, len(line.strip().split())):
                line.strip().split()[0]) + ',' + line.strip().split()[i]
            n.append(int(line.strip().split()[0]))
            for i in range(1, len(line.strip().split())):
                edge.append(int(line.strip().split()[i]))
    print(n)
    print(edge)
#def EdgeContraction(n, edge):
    #while len(n) > 2
    #randomly select edge(u,v)
    #delete all the edges that contains (u,v) including self-loops, join the remaining edges of vertices u and v.
    #do this by removing the (u,v) edges and appending the edges that contain u and v?
    #when while-loop breaks, return no. of remaining edges.
if __name__ == "__main__":
    main()