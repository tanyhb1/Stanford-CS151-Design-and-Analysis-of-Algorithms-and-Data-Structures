def main():
    a = []
    with open('i')
    QuickSort(a, 0, len(a)-1)
    print(a)
def QuickSort(array, left, right):
    if right is None:
        right = len(array)-1
    if left>=right or left<0:
        return(array)
    



                                                                        #makes pivot the first element in the array
    CurrentPosition = PartitionArray(array, left, right)                                     #Current position of pivot
    QuickSort(array, left, CurrentPosition-1)                                #try, confused if array will split if i slice an array
    QuickSort(array, CurrentPosition+1, right)
    
def PartitionArray(array, left, right):
    pivot = array[left]
    i = left+1
    for j in range(left+1, right+1):
        if array[j] < pivot:
            array[j], array[i] = array[i], array[j]
            i = i+1
    array[left], array[i-1] = array[i-1], array[left]
    print(array, i-1, left, right)
    return(i-1)


def ChoosePivot(array, length):
    return(0)
    #to be implemented according to pset specs
    
if __name__ == "__main__":
    main()